/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as BlogNewImport } from './routes/blog/new'
import { Route as BlogIdImport } from './routes/blog/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogNewRoute = BlogNewImport.update({
  id: '/blog/new',
  path: '/blog/new',
  getParentRoute: () => rootRoute,
} as any)

const BlogIdRoute = BlogIdImport.update({
  id: '/blog/$id',
  path: '/blog/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/blog/$id': {
      id: '/blog/$id'
      path: '/blog/$id'
      fullPath: '/blog/$id'
      preLoaderRoute: typeof BlogIdImport
      parentRoute: typeof rootRoute
    }
    '/blog/new': {
      id: '/blog/new'
      path: '/blog/new'
      fullPath: '/blog/new'
      preLoaderRoute: typeof BlogNewImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/blog/$id': typeof BlogIdRoute
  '/blog/new': typeof BlogNewRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/blog/$id' | '/blog/new'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/blog/$id' | '/blog/new'
  id: '__root__' | '/' | '/blog/$id' | '/blog/new'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BlogIdRoute: typeof BlogIdRoute
  BlogNewRoute: typeof BlogNewRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BlogIdRoute: BlogIdRoute,
  BlogNewRoute: BlogNewRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/blog/$id",
        "/blog/new"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/blog/$id": {
      "filePath": "blog/$id.tsx"
    },
    "/blog/new": {
      "filePath": "blog/new.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
